{"version":3,"sources":["components/DataProvider.js","components/FormInput.js","components/ListItem.js","components/List.js","components/Footer.js","Todo.js","Account.js","Help.js","Header.js","Home.js","App.js","reportWebVitals.js","index.js"],"names":["DataContext","createContext","DataProvider","props","useState","todos","setTodos","useEffect","todoLocalstorage","JSON","parse","localStorage","getItem","setItem","stringify","Provider","value","children","FormInput","useContext","todoName","setTodoName","autoComplete","onSubmit","e","preventDefault","name","complete","type","id","required","placeholder","onChange","target","onClick","message","success","content","style","fontSize","fontFamily","color","title","PlusCircleOutlined","ListItem","todo","checkComplete","handleEditTodos","onEdit","setOnEdit","editValue","setEditValue","SaveOutlined","handleSave","htmlFor","className","checked","EditOutlined","disabled","onConfirm","index","newTodos","splice","okText","cancelText","DeleteOutlined","cursor","List","console","log","switchComplete","forEach","map","Footer","checkAll","setCheckAll","newTodosComplete","filter","TabPane","Tabs","Demo","defaultActiveKey","tab","filteredTodo","length","notification","open","description","Todo","Account","formik","useFormik","initialValues","full_name","email","password","confirm_password","validationSchema","Yup","min","max","oneOf","values","alert","handleSubmit","handleChange","errors","touched","Button","Help","Header","Navbar","expand","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","Home","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8ff17bb.chunk.js","sourcesContent":["import React, {useState,useEffect,createContext} from 'react'\r\n\r\nexport const DataContext=createContext();\r\n\r\nexport const DataProvider=(props)=>{\r\n\r\n    const [todos,setTodos]=useState([])\r\n\r\n\r\n    useEffect(()=>{\r\n        const todoLocalstorage=JSON.parse(localStorage.getItem('todoLocalstorage'))//The getItem() method of the Storage interface, when passed a key name, will return that key's value, or null if the key does not exist, in the given Storage object.\r\n        if(todoLocalstorage) setTodos(todoLocalstorage)\r\n    },[])\r\n     useEffect(() =>{\r\n     localStorage.setItem('todoLocalstorage',JSON.stringify(todos))//The setItem() method of the Storage interface, when passed a key name and value, will add that key to the given Storage object, or update that key's value if it already exists.\r\n    },[todos])\r\n \r\n    \r\n    \r\n    return (\r\n    \r\n        <DataContext.Provider value={[todos,setTodos]}>\r\n            {props.children}\r\n        </DataContext.Provider>\r\n            \r\n      \r\n    )\r\n}\r\n","import React,{useState,useContext} from 'react'\r\nimport {DataContext} from './DataProvider'\r\nimport {PlusCircleOutlined} from '@ant-design/icons';\r\nimport { Tooltip,message } from 'antd';\r\n\r\n\r\n\r\nfunction FormInput() {\r\n    const [todos,setTodos]=useContext(DataContext);\r\n    const [todoName,setTodoName]=useState('');\r\n    const addTodo=e=>{\r\n        e.preventDefault();\r\n        setTodos([...todos,{name:todoName,complete:false}])\r\n        setTodoName('');\r\n    }\r\n    const info = () => {\r\n    message.success({\r\n    content: 'Yay!You added a task',\r\n    style: {\r\n    fontSize:'18px',\r\n    fontFamily:'Oleo Script',\r\n    color:''\r\n    },\r\n  });\r\n};\r\n\r\n   \r\n    return (\r\n       \r\n             <form autoComplete=\"off\" onSubmit={addTodo} >\r\n      <input type=\"text\" name=\"todos\" id=\"todos\" required placeholder=\"Type a todo and press Enter\" value={todoName}\r\n      onChange={e=>setTodoName(e.target.value)} />\r\n      <button type=\"submit\"  onClick={info}><Tooltip title=\"Click here to add the task\"><PlusCircleOutlined  style={{ fontSize: '25px', color: 'white' }}/> </Tooltip></button>\r\n      \r\n      </form>\r\n      \r\n    )\r\n}\r\n\r\nexport default FormInput\r\n","import React from 'react'\r\nimport {useState,useContext} from 'react'\r\nimport {EditOutlined,SaveOutlined,DeleteOutlined} from '@ant-design/icons';\r\nimport { Tooltip } from 'antd';\r\nimport {DataContext} from './DataProvider'\r\nimport {Popconfirm} from 'antd';\r\nimport { Button} from 'react-bootstrap';\r\n\r\n\r\nexport default function ListItem({todo,id,checkComplete,handleEditTodos}) {\r\n    const [onEdit,setOnEdit]=useState(false)\r\n    const [editValue,setEditValue]=useState(todo.name)\r\n    const [todos,setTodos]=useContext(DataContext)\r\n\r\n    const handleOnEdit = ()=>{\r\n        setOnEdit(true)\r\n    } \r\n    const handleSave=id=>{\r\n        setOnEdit(false)\r\n        if(editValue){\r\n            handleEditTodos(editValue,id)\r\n        }else{\r\n            setEditValue(todo.name)\r\n        }\r\n    }\r\n    const deleteUser=index =>{\r\n    const newTodos = [...todos];\r\n    newTodos.splice(index, 1);\r\n    setTodos(newTodos);\r\n  \r\n  \r\n}\r\n\r\n  \r\n\r\n    if(onEdit)\r\n    {\r\n        return(\r\n         \r\n      \r\n      <li>\r\n    \r\n      <input type=\"text\" id=\"editValue\" value={editValue} name=\"editValue\" onChange={e =>setEditValue(e.target.value)} />\r\n   <Tooltip title=\"Click here to save the edited task\"><SaveOutlined onClick={()=>handleSave(id)} style={{color:'purple',fontSize:'20px'}}/></Tooltip>\r\n      </li>\r\n        )\r\n            \r\n\r\n    }\r\n    else{\r\n    return (\r\n        \r\n    \r\n\r\n\r\n <li>\r\n      <label htmlFor={id} className={todo.complete?\"active\":\"\"}>\r\n      <input type=\"checkbox\" id={id} checked={todo.complete}\r\n      onChange={() =>checkComplete(id)}\r\n      />\r\n   {todo.name}\r\n      \r\n      </label>\r\n     \r\n      <span><Tooltip title=\"Click here to edit the task\">\r\n      <EditOutlined disabled={todo.complete} onClick={handleOnEdit} style={{color:'dodgerblue',fontSize:'20px'}}/></Tooltip>{' '}\r\n        <Popconfirm\r\n                         title=\"Are you sure you want to delete this task?\"\r\n                        onConfirm={deleteUser}\r\n                       \r\n                    \r\n                    \r\n \r\n\r\n                       \r\n                         // onCancel={cancel}\r\n                          okText=\"Yes\"\r\n                          cancelText=\"No\"\r\n                      >\r\n      \r\n   <DeleteOutlined style={{color:'red',fontSize:'18px',cursor:'pointer'}}/>  </Popconfirm></span>\r\n      </li>       \r\n    )\r\n      \r\n\r\n    }\r\n\r\n    \r\n}\r\n\r\n    \r\n","import React, {useContext} from 'react'\r\nimport ListItem from './ListItem'\r\nimport {DataContext} from './DataProvider'\r\n\r\n\r\nexport default function List() {\r\n    const [todos,setTodos]=useContext(DataContext);\r\n    console.log(todos)\r\n    \r\n    const switchComplete=id=>{\r\n        const newTodos=[...todos]\r\n        newTodos.forEach((todo,index)=>{\r\n            if(index===id){\r\n                todo.complete= !todo.complete\r\n            }\r\n        \r\n    })\r\n    setTodos(newTodos)\r\n}\r\n\r\n    const handleEditTodos=(editValue,id)=>{\r\n        const newTodos=[...todos]\r\n        newTodos.forEach((todo,index) =>{\r\n            if(index===id){\r\n                todo.name=editValue\r\n            }\r\n        })\r\n        setTodos(newTodos)\r\n    }\r\n\r\n    return (\r\n    <ul>\r\n        {\r\n            todos.map((todo,index) => (\r\n                <ListItem todo={todo} key={index} id={index}\r\n                checkComplete={switchComplete} handleEditTodos={handleEditTodos}/>\r\n\r\n            ))\r\n        }\r\n        </ul>\r\n    )\r\n}\r\n","import React, {useContext,useState} from 'react'\r\nimport {DataContext} from './DataProvider'\r\nimport {Popconfirm, message,Tooltip,Empty,Button, notification,Tabs } from 'antd';\r\n\r\n\r\nfunction Footer() {\r\n    const [checkAll,setCheckAll]=useState(false)\r\n    const [todos,setTodos]=useContext(DataContext)\r\n  \r\n   \r\n      const handleCheckAll = () =>{\r\n        const newTodos=[...todos]\r\n        newTodos.forEach(todo=>{\r\n        todo.complete= !checkAll\r\n        })\r\n        setTodos(newTodos)\r\n        setCheckAll(!checkAll)\r\n    }\r\n\r\n     const newTodosComplete=()=>{\r\n        return todos.filter(todo=>todo.complete===false)\r\n    }\r\n    const completed=()=>{\r\n       return todos.filter(todo=>todo.complete===true) \r\n    }\r\n\r\n    const deleteTodo=() =>{\r\n       \r\n        setTodos(newTodosComplete())\r\n        setCheckAll(false)\r\n    }\r\n   const openNotification = () => {\r\n  notification.open({\r\n    message: 'Notification',\r\n    description:\r\n      <p>You have {newTodosComplete().length} active tasks and {completed().length} completed tasks</p>,\r\n  \r\n     });\r\n    }\r\n\r\n const { TabPane } = Tabs;\r\n \r\n    const Demo = () => (\r\n  <Tabs defaultActiveKey=\"1\">\r\n    <TabPane tab=\"All\" key=\"1\" >\r\n        <div>\r\n      {todos.filter(todo => todo.complete===false|| todo.complete===true).map(filteredTodo => (\r\n        <li>\r\n          {filteredTodo.name}\r\n        </li>\r\n      ))}\r\n    </div>\r\n    </TabPane>\r\n    <TabPane tab=\"Active\" key=\"2\" >\r\n     <div>\r\n      {todos.filter(todo => todo.complete===false).map(filteredTodo => (\r\n        <li>\r\n          {filteredTodo.name}\r\n        </li>\r\n      ))}\r\n    </div>\r\n    </TabPane>\r\n    <TabPane tab=\"Completed\" key=\"3\">\r\n       <div>\r\n      {todos.filter(todo => todo.complete===true).map(filteredTodo => (\r\n        <li>\r\n          {filteredTodo.name}\r\n        </li>\r\n      ))}\r\n    </div>\r\n    </TabPane>\r\n  </Tabs>\r\n);\r\n\r\n    return (    \r\n        <div>\r\n         \r\n        {todos.length===0? \r\n      <h2><Empty /></h2>:\r\n    \r\n     <div className=\"row\">\r\n      <Demo />\r\n     \r\n     <label htmlFor=\"all\">\r\n      <input type=\"checkbox\" name=\"all\" id=\"all\"\r\n      onChange={handleCheckAll} checked={checkAll}/>All &nbsp;&nbsp;&nbsp;\r\n     \r\n      \r\n  <Button type=\"primary\" onClick={openNotification}>\r\n  click to know about the task status\r\n  </Button>\r\n      </label>\r\n           <Popconfirm\r\n                         title=\"Are you sure?\"\r\n                        onConfirm={deleteTodo}\r\n                       \r\n                    \r\n                    \r\n \r\n\r\n                       \r\n                         // onCancel={cancel}\r\n                          okText=\"Yes\"\r\n                          cancelText=\"No\"\r\n                      >\r\n      <button id=\"delete\"><Tooltip title=\"Select a task or all to delete one or all tasks\">Delete</Tooltip></button>\r\n     </Popconfirm>\r\n      </div>\r\n        }   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n\r\n","import React from 'react'\nimport './App.css';\nimport FormInput from './components/FormInput'\nimport List from './components/List'\nimport Footer from './components/Footer'\nimport {DataProvider} from './components/DataProvider'\nimport { DatePicker} from 'antd';\n\nfunction Todo() {\n   return (\n    <DataProvider>\n    <div className=\"Todo\">\n     <h1>To Do List</h1><DatePicker style={{cursor:'pointer'}}/>\n      <FormInput/>\n      <List/>\n      <Footer/>              \n    </div>\n    </DataProvider>\n  );\n}\n\nexport default Todo;\n"," import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Button } from 'react-bootstrap';\r\n\r\n\r\n\r\nexport default function Account() {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      full_name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirm_password: \"\"\r\n    },\r\n    validationSchema: Yup.object({\r\n      full_name: Yup.string()\r\n        .min(2, \"Mininum 2 characters\")\r\n        .max(15, \"Maximum 15 characters\")\r\n        .required(\"Required!\"),\r\n      email: Yup.string()\r\n        .email(\"Invalid email format\")\r\n        .required(\"Required!\"),\r\n      password: Yup.string()\r\n        .min(8, \"Minimum 8 characters\")\r\n        .required(\"Required!\"),\r\n      confirm_password: Yup.string()\r\n        .oneOf([Yup.ref(\"password\")], \"Password's not match\")\r\n        .required(\"Required!\")\r\n    }),\r\n    onSubmit: values => {\r\n      alert(JSON.stringify(values, null, 2));\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"signup\">\r\n      <h1 style={{color:'rgb(209, 193, 193)'}}>SIGN UP</h1>\r\n\r\n      <form onSubmit={formik.handleSubmit} className=\"signupform\">\r\n        <div>\r\n          <label className=\"formlabel\">Full Name</label>\r\n          <input className=\"forminput\"\r\n            type=\"text\"\r\n            name=\"full_name\"\r\n            value={formik.values.full_name}\r\n            onChange={formik.handleChange}\r\n          />\r\n          {formik.errors.full_name && formik.touched.full_name && (\r\n            <p className=\"formp\">{formik.errors.full_name}</p>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <label className=\"formlabel\">Email</label>\r\n          <input className=\"forminput\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={formik.values.email}\r\n            onChange={formik.handleChange}\r\n          />\r\n          {formik.errors.email && formik.touched.email && (\r\n            <p className=\"formp\">{formik.errors.email}</p>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <label className=\"formlabel\">Password</label>\r\n          <input className=\"forminput\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={formik.values.password}\r\n            onChange={formik.handleChange}\r\n          />\r\n          {formik.errors.password && formik.touched.password && (\r\n            <p className=\"formp\">{formik.errors.password}</p>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <label className=\"formlabel\">Confirm Password</label>\r\n          <input className=\"forminput\"\r\n            type=\"password\"\r\n            name=\"confirm_password\"\r\n            value={formik.values.confirm_password}\r\n            onChange={formik.handleChange}\r\n          />\r\n          {formik.errors.confirm_password &&\r\n            formik.touched.confirm_password && (\r\n              <p className=\"formp\">{formik.errors.confirm_password}</p>\r\n            )}\r\n        </div>\r\n        <div>\r\n        <br/>\r\n      \r\n        <Button color=\"primary\" type=\"submit\">Submit</Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\n\r\nexport default function Help() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"help\">Thanks for visiting our Website!</h1>\r\n      \r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {Navbar, Nav} from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\n\r\nconst Header= () => {\r\n    return (\r\n        <Navbar className=\"color-nav\"  expand=\"lg\" >\r\n\r\n      <LinkContainer to=\"/\">\r\n  <Navbar.Brand>My Todoapp</Navbar.Brand>\r\n    </LinkContainer>\r\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n  <Navbar.Collapse id=\"basic-navbar-nav\">\r\n  {/*ml-auto will pull your navbar-nav to the right*/}\r\n    <Nav className=\"ml-auto\" style={{fontSize:'20px'}}>\r\n        <LinkContainer to=\"/account\">\r\n      <Nav.Link>Account</Nav.Link>\r\n      </LinkContainer>\r\n      <LinkContainer to=\"/todo\">\r\n      <Nav.Link>Todos</Nav.Link>\r\n      </LinkContainer>\r\n      <LinkContainer to=\"/help\">\r\n      <Nav.Link>Help</Nav.Link>\r\n      </LinkContainer>\r\n    </Nav>\r\n  </Navbar.Collapse>\r\n</Navbar>\r\n    )\r\n}\r\nexport default Header","import React from 'react'\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div>\r\n            welcome to home page\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Todo from './Todo';\r\nimport Account from './Account';\r\nimport Help from './Help';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'antd/dist/antd.css';\r\nimport Header from './Header'\r\nimport Home from './Home'\r\n\r\n\r\n\r\nimport 'antd/dist/antd.css';\r\n//Using HashRouter instead of BrowserRouter to avoid 404 error while refreshing pages using the github page site link\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Header/>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/account\" component={Account} />\r\n          <Route path=\"/todo\" component={Todo} />\r\n          <Route path=\"/help\" component={Help} />\r\n\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}