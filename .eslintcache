[{"C:\\WorkspaceVS\\Reactkarl\\reactcontext\\src\\index.js":"1","C:\\WorkspaceVS\\Reactkarl\\reactcontext\\src\\reportWebVitals.js":"2","C:\\WorkspaceVS\\Reactkarl\\reactcontext\\src\\components\\FormInput.js":"3","C:\\WorkspaceVS\\Reactkarl\\reactcontext\\src\\components\\List.js":"4","C:\\WorkspaceVS\\Reactkarl\\reactcontext\\src\\components\\Footer.js":"5","C:\\WorkspaceVS\\Reactkarl\\reactcontext\\src\\components\\ListItem.js":"6","C:\\WorkspaceVS\\Reactkarl\\reactcontext\\src\\components\\DataProvider.js":"7","C:\\WorkspaceVS\\Reactkarl\\reactcontext\\src\\App.js":"8","C:\\WorkspaceVS\\Reactkarl\\reactcontext\\src\\Todo.js":"9","C:\\WorkspaceVS\\Reactkarl\\reactcontext\\src\\Account.js":"10","C:\\WorkspaceVS\\Reactkarl\\reactcontext\\src\\Header.js":"11","C:\\WorkspaceVS\\Reactkarl\\reactcontext\\src\\Help.js":"12"},{"size":500,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":1160,"mtime":1611023494809,"results":"16","hashOfConfig":"14"},{"size":1017,"mtime":1610431463012,"results":"17","hashOfConfig":"14"},{"size":4709,"mtime":1611281885841,"results":"18","hashOfConfig":"14"},{"size":2377,"mtime":1611276783594,"results":"19","hashOfConfig":"14"},{"size":1082,"mtime":1611270859723,"results":"20","hashOfConfig":"14"},{"size":888,"mtime":1611283183470,"results":"21","hashOfConfig":"14"},{"size":525,"mtime":1611202882775,"results":"22","hashOfConfig":"14"},{"size":3084,"mtime":1611202184348,"results":"23","hashOfConfig":"14"},{"size":1007,"mtime":1611283039660,"results":"24","hashOfConfig":"14"},{"size":2116,"mtime":1611202311695,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1bshv4u",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\WorkspaceVS\\Reactkarl\\reactcontext\\src\\index.js",[],["53","54"],"C:\\WorkspaceVS\\Reactkarl\\reactcontext\\src\\reportWebVitals.js",[],"C:\\WorkspaceVS\\Reactkarl\\reactcontext\\src\\components\\FormInput.js",[],"C:\\WorkspaceVS\\Reactkarl\\reactcontext\\src\\components\\List.js",[],"C:\\WorkspaceVS\\Reactkarl\\reactcontext\\src\\components\\Footer.js",["55","56","57"],"import React, {useContext,useState} from 'react'\r\nimport {DataContext} from './DataProvider'\r\nimport {Popconfirm, message,Tooltip,Empty,Button, notification,Tabs } from 'antd';\r\n\r\n\r\nfunction Footer() {\r\n    const [checkAll,setCheckAll]=useState(false)\r\n    const [todos,setTodos]=useContext(DataContext)\r\n  \r\n   \r\n      const handleCheckAll = () =>{\r\n        const newTodos=[...todos]\r\n        newTodos.forEach(todo=>{\r\n        todo.complete= !checkAll\r\n        })\r\n        setTodos(newTodos)\r\n        setCheckAll(!checkAll)\r\n    }\r\n\r\n     const newTodosComplete=()=>{\r\n        return todos.filter(todo=>todo.complete===false)\r\n    }\r\n    const completed=()=>{\r\n       return todos.filter(todo=>todo.complete===true) \r\n    }\r\n   \r\n\r\n    const deleteTodo=() =>{\r\n       \r\n        setTodos(newTodosComplete())\r\n        setCheckAll(false)\r\n    }\r\n    \r\n   const openNotification = () => {\r\n        \r\n  notification.open({\r\n     \r\n    message: <h4 style={{fontFamily: 'Oleo Script'}}>Hey,your task status</h4>,\r\n    description:\r\n      <p>You have {newTodosComplete().length} active tasks and {completed().length} completed tasks</p>,\r\n  \r\n     });\r\n  \r\n    }\r\n    \r\n\r\n {/*const { TabPane } = Tabs;\r\n \r\n    const Demo = () => (\r\n  <Tabs defaultActiveKey=\"1\" type=\"card\">\r\n    <TabPane tab=\"ALL\" key=\"1\"  >\r\n        <div style={{paddingBottom:'25px'}}>\r\n        {todos.filter(todo => todo.complete===false|| todo.complete===true).map(filteredTodo => (\r\n         {/*} {todos.map((allTodo,id) => (*/}\r\n        {/*<li style={{listStyle:'circle',textTransform:'capitalize'}}>\r\n          {filteredTodo.name}\r\n        </li>\r\n      ))}\r\n    </div>\r\n    </TabPane>\r\n    <TabPane tab=\"ACTIVE\" key=\"2\" >\r\n     <div style={{paddingBottom:'25px'}}>\r\n      {todos.filter(todo => todo.complete===false).map(filteredTodo => (\r\n        <li style={{color:'darkblue',listStyle:'circle',textTransform:'capitalize'}}>\r\n          {filteredTodo.name}\r\n        </li>\r\n      ))}\r\n    </div>\r\n    </TabPane>\r\n    <TabPane tab=\"COMPLETED\" key=\"3\" >\r\n       <div style={{paddingBottom:'25px'}}>\r\n      {todos.filter(todo => todo.complete===true).map(filteredTodo => (\r\n        <li style={{color:'green',listStyle:'circle',textTransform:'capitalize'}}>\r\n          {filteredTodo.name}\r\n        </li>\r\n      ))}\r\n    </div>\r\n    </TabPane>\r\n  </Tabs>\r\n      );*/}\r\n      const { TabPane } = Tabs;\r\n \r\n    const Demo = () => (\r\n  <Tabs defaultActiveKey=\"1\" type=\"card\">\r\n    <TabPane tab=\"All\" key=\"1\"  >\r\n        <div style={{paddingBottom:'25px'}}>\r\n      {todos.filter(todo => todo.complete===false|| todo.complete===true).map((filteredTodo,id) => (\r\n        <li key={id} style={{listStyle:'circle',textTransform:'capitalize'}}>\r\n          {filteredTodo.name}\r\n        </li>\r\n      ))}\r\n    </div>\r\n    </TabPane>\r\n    <TabPane tab=\"Active\" key=\"2\" >\r\n     <div style={{paddingBottom:'25px'}}>\r\n      {todos.filter(todo => todo.complete===false).map((filteredTodo,id) => (\r\n        <li key={id}style={{color:'darkblue',listStyle:'circle',textTransform:'capitalize'}}>\r\n          {filteredTodo.name}\r\n        </li>\r\n      ))}\r\n    </div>\r\n    </TabPane>\r\n    <TabPane tab=\"Completed\" key=\"3\" >\r\n       <div style={{paddingBottom:'25px'}}>\r\n      {todos.filter(todo => todo.complete===true).map((filteredTodo,id) => (\r\n        <li key={id} style={{color:'green',listStyle:'circle',textTransform:'capitalize'}}>\r\n          {filteredTodo.name}\r\n        </li>\r\n      ))}\r\n    </div>\r\n    </TabPane>\r\n  </Tabs>\r\n);\r\n\r\n    return (    \r\n        <div>\r\n         \r\n        {todos.length===0? \r\n      <h2><Empty /></h2>:\r\n      \r\n    \r\n     <div className=\"row\">\r\n    <Demo/>\r\n     <Button type=\"primary\" onClick={openNotification} style={{width:'100%'}}>\r\n  click to know about the task status\r\n  </Button>\r\n    \r\n     \r\n     <label htmlFor=\"all\" className=\"allinput\">\r\n      <Tooltip placement=\"left\" title=\"Check to complete all tasks and uncheck to make it active again\"><input type=\"checkbox\" name=\"all\" id=\"all\"\r\n      onChange={handleCheckAll} checked={checkAll} /></Tooltip>Mark all complete &nbsp;&nbsp;&nbsp;\r\n     \r\n      \r\n       </label>\r\n           <Popconfirm\r\n                         title=\"Are you sure?\"\r\n                        onConfirm={deleteTodo}\r\n                       \r\n                    \r\n                    \r\n \r\n\r\n                       \r\n                         // onCancel={cancel}\r\n                          okText=\"Yes\"\r\n                          cancelText=\"No\"\r\n                      >\r\n     \r\n      <button id=\"delete\"><Tooltip title=\"Select a task or all to delete one or all tasks\">Delete</Tooltip></button>\r\n     </Popconfirm>\r\n      </div>\r\n        }   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n\r\n","C:\\WorkspaceVS\\Reactkarl\\reactcontext\\src\\components\\ListItem.js",["58"],"import React from 'react'\r\nimport {useState,useContext} from 'react'\r\nimport {EditOutlined,SaveOutlined,DeleteOutlined} from '@ant-design/icons';\r\nimport { Tooltip } from 'antd';\r\nimport {DataContext} from './DataProvider'\r\nimport {Popconfirm} from 'antd';\r\nimport { Button} from 'react-bootstrap';\r\n\r\n\r\nexport default function ListItem({todo,id,checkComplete,handleEditTodos}) {\r\n    const [onEdit,setOnEdit]=useState(false)\r\n    const [editValue,setEditValue]=useState(todo.name)\r\n    const [todos,setTodos]=useContext(DataContext)\r\n\r\n    const handleOnEdit = ()=>{\r\n        setOnEdit(true)\r\n    } \r\n    const handleSave=id=>{\r\n        setOnEdit(false)\r\n        if(editValue){\r\n            handleEditTodos(editValue,id)\r\n        }else{\r\n            setEditValue(todo.name)\r\n        }\r\n    }\r\n    const deleteUser=(id)=>{\r\n    const newTodos = [...todos];\r\n    newTodos.splice(id, 1);\r\n    setTodos(newTodos);\r\n  \r\n  \r\n}\r\n\r\n  \r\n\r\n    if(onEdit)\r\n    {\r\n        return(\r\n         \r\n      \r\n      <li>\r\n    \r\n      <input type=\"text\" id=\"editValue\" value={editValue} name=\"editValue\" onChange={e =>setEditValue(e.target.value)} />\r\n   <Tooltip title=\"Click here to save the edited task\"><SaveOutlined onClick={()=>handleSave(id)} style={{color:'purple',fontSize:'20px'}}/></Tooltip>\r\n      </li>\r\n        )\r\n            \r\n\r\n    }\r\n    else{\r\n    return (\r\n        \r\n    \r\n\r\n\r\n <li>\r\n      <label htmlFor={id} className={todo.complete?\"active\":\"\"}>\r\n      <input type=\"checkbox\" id={id} checked={todo.complete}\r\n      onChange={() =>checkComplete(id)}\r\n      />\r\n   {todo.name}\r\n      \r\n      </label>\r\n     \r\n      <span><Tooltip title=\"Click here to edit the task\">\r\n      <EditOutlined disabled={todo.complete} onClick={handleOnEdit} style={{color:'dodgerblue',fontSize:'20px'}}/></Tooltip>{' '}\r\n        <Popconfirm\r\n                         title=\"Are you sure you want to delete this task?\"\r\n                        onConfirm={()=>deleteUser(id)}\r\n                       \r\n                    \r\n                    \r\n \r\n\r\n                       \r\n                         // onCancel={cancel}\r\n                          okText=\"Yes\"\r\n                          cancelText=\"No\"\r\n                      >\r\n      \r\n   <DeleteOutlined  style={{color:'red',fontSize:'18px',cursor:'pointer'}}/>  </Popconfirm></span>\r\n      </li>       \r\n    )\r\n      \r\n\r\n    }\r\n\r\n    \r\n}\r\n\r\n    \r\n","C:\\WorkspaceVS\\Reactkarl\\reactcontext\\src\\components\\DataProvider.js",[],"C:\\WorkspaceVS\\Reactkarl\\reactcontext\\src\\App.js",[],"C:\\WorkspaceVS\\Reactkarl\\reactcontext\\src\\Todo.js",[],"C:\\WorkspaceVS\\Reactkarl\\reactcontext\\src\\Account.js",[],"C:\\WorkspaceVS\\Reactkarl\\reactcontext\\src\\Header.js",[],"C:\\WorkspaceVS\\Reactkarl\\reactcontext\\src\\Help.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":3,"column":21,"nodeType":"65","messageId":"66","endLine":3,"endColumn":28},{"ruleId":"67","severity":1,"message":"68","line":47,"column":2,"nodeType":"69","messageId":"70","endLine":54,"endColumn":46},{"ruleId":"67","severity":1,"message":"68","line":55,"column":9,"nodeType":"69","messageId":"70","endLine":80,"endColumn":12},{"ruleId":"63","severity":1,"message":"71","line":7,"column":10,"nodeType":"65","messageId":"66","endLine":7,"endColumn":16},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'message' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]